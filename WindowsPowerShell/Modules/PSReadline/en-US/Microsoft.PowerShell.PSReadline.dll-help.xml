<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">
  <!-- Updatable Help Version 5.0.2.0 -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PSReadlineKeyHandler</command:name>
      <maml:description>
        <maml:para>Gets the key bindings for the PSReadline module.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>PSReadlineKeyHandler</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Get-PSReadlineKeyHandler gets key bindings. If you add either the Bound or Unbound parameters, Get-PSReadlineKeyHandler returns all bound keys and unbound functions. If you specify Bound, but not Unbound, the cmdlet returns only bound keys. If you specify Unbound, but not Bound, only unbound keys are returned. If you specify both Bound and Unbound, Get-PSReadlineKeyHandler returns all bound keys and unbound functions.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PSReadlineKeyHandler</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Bound</maml:name>
          <maml:description>
            <maml:para>Includes functions that are bound.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Unbound</maml:name>
          <maml:description>
            <maml:para>Includes functions that are unbound.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Bound</maml:name>
        <maml:description>
          <maml:para>Includes functions that are bound.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Unbound</maml:name>
        <maml:description>
          <maml:para>Includes functions that are unbound.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>You cannot pipe objects to Get-PSReadlineKeyHandler.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>PSConsoleUtilities.KeyHandler</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>Returns one entry for each key binding (or chord) for bound functions and/or one entry for each unbound function.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>--------------  EXAMPLE 1  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-PSReadlineKeyHandler
Key                   Function                Description
---                   --------                -----------
Enter                 AcceptLine              Accept the input or move to the next line if input is missing a closing token. 
Shift+Enter           AddLine                 Move the cursor to the next line without attempting to execute the input
Escape                RevertLine              Equivalent to undo all edits (clears the line except lines imported from history) 
LeftArrow             BackwardChar            Move the cursor back one character
RightArrow            ForwardChar             Move the cursor forward one character
Ctrl+LeftArrow        BackwardWord            Move the cursor to the beginning of the current or previous word
Ctrl+RightArrow       NextWord                Move the cursor forward to the start of the next word
Shift+LeftArrow       SelectBackwardChar      Adjust the current selection to include the previous character
Shift+RightArrow      SelectForwardChar       Adjust the current selection to include the next character
Ctrl+Shift+LeftArrow  SelectBackwardWord      Adjust the current selection to include the previous word
Ctrl+Shift+RightArrow SelectNextWord          Adjust the current selection to include the next word
UpArrow               PreviousHistory         Replace the input with the previous item in the history
DownArrow             NextHistory             Replace the input with the next item in the history
Home                  BeginningOfLine         Move the cursor to the beginning of the line
End                   EndOfLine               Move the cursor to the end of the line
Shift+Home            SelectBackwardsLine     Adjust the current selection to include from the cursor to the end of the line
Shift+End             SelectLine              Adjust the current selection to include from the cursor to the start of the line
Delete                DeleteChar              Delete the character under the cursor
Backspace             BackwardDeleteChar      Delete the charcter before the cursor
Ctrl+Spacebar         MenuComplete            Complete the input if there is a single completion, otherwise complete the input by selecting from a menu o... 
Tab                   TabCompleteNext         Complete the input using the next completion
Shift+Tab             TabCompletePrevious     Complete the input using the previous completion
Ctrl+a                SelectAll               Select the entire line. Moves the cursor to the end of the line
Ctrl+c                CopyOrCancelLine        Either copy selected text to the clipboard, or if no text is selected, cancel editing the line with Cancel... 
Ctrl+C                Copy                    Copy selected region to the system clipboard.  If no region is selected, copy the whole line
Ctrl+l                ClearScreen             Clear the screen and redraw the current line at the top of the screen
Ctrl+r                ReverseSearchHistory    Search history backwards interactively
…
</dev:code>
        <dev:remarks>
          <maml:para>This example returns all key mappings, bound and unbound.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>--------------  EXAMPLE 2  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-PSReadlineKeyHandler -Bound
Key                   Function                Description
---                   --------                -----------
Enter                 AcceptLine              Accept the input or move to the next line if input is missing a closing token. 
Shift+Enter           AddLine                 Move the cursor to the next line without attempting to execute the input
Escape                RevertLine              Equivalent to undo all edits (clears the line except lines imported from history) 
LeftArrow             BackwardChar            Move the cursor back one character
RightArrow            ForwardChar             Move the cursor forward one character
Ctrl+LeftArrow        BackwardWord            Move the cursor to the beginning of the current or previous word
Ctrl+RightArrow       NextWord                Move the cursor forward to the start of the next word
Shift+LeftArrow       SelectBackwardChar      Adjust the current selection to include the previous character
Shift+RightArrow      SelectForwardChar       Adjust the current selection to include the next character
Ctrl+Shift+LeftArrow  SelectBackwardWord      Adjust the current selection to include the previous word
Ctrl+Shift+RightArrow SelectNextWord          Adjust the current selection to include the next word
UpArrow               PreviousHistory         Replace the input with the previous item in the history
DownArrow             NextHistory             Replace the input with the next item in the history
Home                  BeginningOfLine         Move the cursor to the beginning of the line
End                   EndOfLine               Move the cursor to the end of the line
Shift+Home            SelectBackwardsLine     Adjust the current selection to include from the cursor to the end of the line
Shift+End             SelectLine              Adjust the current selection to include from the cursor to the start of the line
Delete                DeleteChar              Delete the character under the cursor
Backspace             BackwardDeleteChar      Delete the charcter before the cursor
Ctrl+Spacebar         MenuComplete            Complete the input if there is a single completion, otherwise complete the input by selecting from a menu o... 
Tab                   TabCompleteNext         Complete the input using the next completion
…
</dev:code>
        <dev:remarks>
          <maml:para>This example returns only bound keys and key combinations (chords).</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Remove-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PSReadlineOption</command:name>
      <maml:description>
        <maml:para>Returns values for the options that can be configured.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>PSReadlineOption</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Get-PSReadlineOption returns the current state of the settings that can be configured by Set-PSReadlineOption. You can use the object that Get-PSReadlineOption returns to change PSReadline options. This provides a slightly simpler way of setting syntax coloring options for multiple kinds of tokens.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PSReadlineOption</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>You cannot pipe objects to Get-PSReadlineOption.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>--------------  EXAMPLE 1  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-PSReadlineOption
EditMode                               : Windows
ContinuationPrompt                     : &gt;&gt;&gt;
ContinuationPromptForegroundColor      : DarkYellow
ContinuationPromptBackgroundColor      : DarkMagenta
ExtraPromptLineCount                   : 0
AddToHistoryHandler                    : 
CommandValidationHandler               : 
CommandsToValidateScriptBlockArguments : {ForEach-Object, %, Invoke-Command, icm...} 
HistoryNoDuplicates                    : False
MaximumHistoryCount                    : 4096
MaximumKillRingCount                   : 10
HistorySearchCursorMovesToEnd          : False
ShowToolTips                           : False
DingTone                               : 1221
CompletionQueryItems                   : 100
WordDelimiters                         : ;:,.[]{}()/\|^&amp;*-=+–—― 
DingDuration                           : 50
BellStyle                              : Audible
HistorySearchCaseSensitive             : False
HistorySavePath                        : C:\Users\TestUser\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt
HistorySaveStyle                       : SaveIncrementally
DefaultTokenForegroundColor            : DarkYellow
CommentForegroundColor                 : DarkGreen
KeywordForegroundColor                 : Green
StringForegroundColor                  : DarkCyan
OperatorForegroundColor                : DarkGray
VariableForegroundColor                : Green
CommandForegroundColor                 : Yellow
ParameterForegroundColor               : DarkGray
TypeForegroundColor                    : Gray
NumberForegroundColor                  : White
MemberForegroundColor                  : White
DefaultTokenBackgroundColor            : DarkMagenta
CommentBackgroundColor                 : DarkMagenta
KeywordBackgroundColor                 : DarkMagenta
StringBackgroundColor                  : DarkMagenta
OperatorBackgroundColor                : DarkMagenta
VariableBackgroundColor                : DarkMagenta
CommandBackgroundColor                 : DarkMagenta
ParameterBackgroundColor               : DarkMagenta
TypeBackgroundColor                    : DarkMagenta
NumberBackgroundColor                  : DarkMagenta
MemberBackgroundColor                  : DarkMagenta
EmphasisForegroundColor                : Cyan
EmphasisBackgroundColor                : DarkMagenta
ErrorForegroundColor                   : Red
ErrorBackgroundColor                   : DarkMagenta
</dev:code>
        <dev:remarks>
          <maml:para>This example returns the list of available PSReadline options and their current values.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Remove-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-PSReadlineKeyHandler</command:name>
      <maml:description>
        <maml:para>Removes a key binding.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Remove</command:verb>
      <command:noun>PSReadlineKeyHandler</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Remove-PSReadlineKeyHandler removes a specified key binding that has been set by running Set-PSReadlineKeyHandler.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-PSReadlineKeyHandler</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="Key">
          <maml:name>Chord</maml:name>
          <maml:description>
            <maml:para>The key or sequence of keys to be removed. A single binding is specified by using a single string. If the binding is a sequence of keys, the keys are separated with a comma; for example, “Ctrl+X,Ctrl+X”. Note that this parameter accepts multiple strings. Each string is a separate binding, not a sequence of keys for a single binding.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="Key">
        <maml:name>Chord</maml:name>
        <maml:description>
          <maml:para>The key or sequence of keys to be removed. A single binding is specified by using a single string. If the binding is a sequence of keys, the keys are separated with a comma; for example, “Ctrl+X,Ctrl+X”. Note that this parameter accepts multiple strings. Each string is a separate binding, not a sequence of keys for a single binding.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>You cannot pipe objects to Remove-PSReadlineKeyHandler.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>--------------  EXAMPLE 1  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Remove-PSReadlineKeyHandler -Chord Shift+Ctrl+B
</dev:code>
        <dev:remarks>
          <maml:para>This example removes the binding from the key combination, or chord, Ctrl+Shift+B. The Ctrl+Shift+B chord is created in Example 2 in the Set-PSReadlineKeyHandler topic.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-PSReadlineKeyHandler</command:name>
      <maml:description>
        <maml:para>Binds or rebinds keys to either user-defined or PSReadline-provided key handlers.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>PSReadlineKeyHandler</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Run Set-PSReadlineKeyHandler to customize the result when a particular key or sequence of keys is pressed while PSReadline is reading input. With user-defined key bindings, you can do nearly anything that is possible from within a Windows PowerShell script. Typically, you might edit the command line in a new way, but because the handlers are simply Windows PowerShellscripts, you can do interesting things such as change directories or open applications.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-PSReadlineKeyHandler</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="Key">
          <maml:name>Chord</maml:name>
          <maml:description>
            <maml:para>The key or sequence of keys to be bound to a function or script block. Use a single string to specify a single binding. If the binding is a sequence of keys, the keys are separated by inserting a comma; for example, “Ctrl+X,Ctrl+X”. Note that this parameter accepts multiple strings. Each string is considered a separate binding, not a sequence of keys for a single binding.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>The ScriptBlock value is called when the Chord is entered. The ScriptBlock is passed one, or sometimes two, arguments. The first argument is the key pressed (a ConsoleKeyInfo); the second argument could be any object depending on the context.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>BriefDescription</maml:name>
          <maml:description>
            <maml:para>A brief description of the key binding. You can get this from the output of the cmdlet Get-PSReadlineKeyHandler.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="LongDescription">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>A more detailed description of the key binding that is visible in the output of the cmdlet Get-PSReadlineKeyHandler.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-PSReadlineKeyHandler</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="Key">
          <maml:name>Chord</maml:name>
          <maml:description>
            <maml:para>The key or sequence of keys to be bound to a function or script block. Use a single string to specify a single binding. If the binding is a sequence of keys, the keys are separated by inserting a comma; for example, “Ctrl+X,Ctrl+X”. Note that this parameter accepts multiple strings. Each string is considered a separate binding, not a sequence of keys for a single binding.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Function</maml:name>
          <maml:description>
            <maml:para>The name of an existing key handler provided by PSReadline. This parameter lets you rebind existing key bindings, or bind a handler that is provided by PSReadline and is currently unbound. By adding the ScriptBlock parameter, you can get equivalent functionality by calling the method directly from the ScriptBlock. This parameter is the preferred method, however; the results make it easier to determine which functions are bound and unbound.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="true" variableLength="false">Abort</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">AcceptAndGetNext</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">AcceptLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">AddLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BackwardChar</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BackwardDeleteChar</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BackwardDeleteLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BackwardKillLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BackwardKillWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BackwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BeginningOfHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">BeginningOfLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">CancelLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">CaptureScreen</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">CharacterSearch</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">CharacterSearchBackward</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ClearHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ClearScreen</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Complete</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Copy</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">CopyOrCancelLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Cut</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">DeleteChar</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">DeleteCharOrExit</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">DigitArgument</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">EndOfHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">EndOfLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ExchangePointAndMark</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ForwardChar</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ForwardDeleteLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ForwardSearchHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ForwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">GotoBrace</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">HistorySearchBackward</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">HistorySearchForward</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">InvokePrompt</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">KillLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">KillRegion</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">KillWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">MenuComplete</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">NextHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">NextLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">NextWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Paste</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">PossibleCompletions</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">PreviousHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">PreviousLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Redo</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ReverseSearchHistory</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">RevertLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ScrollDisplayDown</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ScrollDisplayDownLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ScrollDisplayToCursor</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ScrollDisplayTop</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ScrollDisplayUp</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ScrollDisplayUpLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectAll</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectBackwardChar</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectBackwardsLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectBackwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectForwardChar</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectForwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectNextWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectShellBackwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectShellForwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelectShellNextWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SelfInsert</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">SetMark</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ShellBackwardKillWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ShellBackwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ShellForwardWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ShellKillWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ShellNextWord</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ShowKeyBindings</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">TabCompleteNext</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">TabCompletePrevious</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Undo</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">UnixWordRubout</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">ValidateAndAcceptLine</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">WhatIsKey</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Yank</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">YankLastArg</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">YankNthArg</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">YankPop</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>BriefDescription</maml:name>
        <maml:description>
          <maml:para>A brief description of the key binding. You can get this from the output of the cmdlet Get-PSReadlineKeyHandler.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="Key">
        <maml:name>Chord</maml:name>
        <maml:description>
          <maml:para>The key or sequence of keys to be bound to a function or script block. Use a single string to specify a single binding. If the binding is a sequence of keys, the keys are separated by inserting a comma; for example, “Ctrl+X,Ctrl+X”. Note that this parameter accepts multiple strings. Each string is considered a separate binding, not a sequence of keys for a single binding.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="LongDescription">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>A more detailed description of the key binding that is visible in the output of the cmdlet Get-PSReadlineKeyHandler.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Function</maml:name>
        <maml:description>
          <maml:para>The name of an existing key handler provided by PSReadline. This parameter lets you rebind existing key bindings, or bind a handler that is provided by PSReadline and is currently unbound. By adding the ScriptBlock parameter, you can get equivalent functionality by calling the method directly from the ScriptBlock. This parameter is the preferred method, however; the results make it easier to determine which functions are bound and unbound.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>The ScriptBlock value is called when the Chord is entered. The ScriptBlock is passed one, or sometimes two, arguments. The first argument is the key pressed (a ConsoleKeyInfo); the second argument could be any object depending on the context.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>You cannot pipe objects to Set-PSReadlineKeyHandler.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>--------------  EXAMPLE 1  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Set-PSReadlineKeyHandler -Chord UpArrow -Function HistorySearchBackward
</dev:code>
        <dev:remarks>
          <maml:para>This example binds the up arrow key to the function HistorySearchBackward, which uses the currently-entered command line as the beginning of the search string when it is searching through command history.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>--------------  EXAMPLE 2  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Set-PSReadlineKeyHandler -Chord Shift+Ctrl+B -ScriptBlock { 
  [PSConsoleUtilities.PSConsoleReadLine]::RevertLine() 
  [PSConsoleUtilities.PSConsoleReadLine]::Insert('build')
      [PSConsoleUtilities.PSConsoleReadLine]::AcceptLine()
}
</dev:code>
        <dev:remarks>
          <maml:para>This example binds the key Ctrl+Shift+B to a script block that clears the line, inserts the word build, and then accepts the line. The example shows how a single key can be used to run a command.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-PSReadlineOption</command:name>
      <maml:description>
        <maml:para>Customizes the behavior of command line editing in PSReadline.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>PSReadlineOption</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Set-PSReadlineOption customizes the behavior of the PSReadline module when you are editing the command line.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-PSReadlineOption</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>AddToHistoryHandler</maml:name>
          <maml:description>
            <maml:para>Specifies a ScriptBlock that can be used to control which commands get added to PSReadline history.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Func[string,bool]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>BellStyle</maml:name>
          <maml:description>
            <maml:para>Specifies how PSReadLine should respond to various error conditions or user prompts. If you do not specify this parameter, the default response is Audible.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Visual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Audible</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>CommandValidationHandler</maml:name>
          <maml:description>
            <maml:para>Specifies a ScriptBlock that is called from ValidateAndAcceptLine. If an exception is thrown, validation fails and the error is reported. Before throwing an exception, the validation handler can place the cursor at the point of the error to make it easier to fix. A validation handler can also change the command line, such as to correct common typographical errors.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Action[CommandAst]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>CompletionQueryItems</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of completion items that are shown without prompting. If the number of items to show is greater than this value, PSReadline prompts you to specify yes or no (y/n) before displaying the completion items. The default maximum number is 100.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ContinuationPrompt</maml:name>
          <maml:description>
            <maml:para>Specifies the string displayed at the beginning of the second and subsequent lines when multi-line input is being entered. Defaults to '&gt;&gt;&gt;'. The empty string is valid.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ContinuationPromptBackgroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the background color of the continuation prompt.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ContinuationPromptForegroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the foreground color of the continuation prompt.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>DingDuration</maml:name>
          <maml:description>
            <maml:para>If the BellStyle parameter is set to Audible, DingDuration specifies the duration of the beep, in milliseconds (ms). If you do not add this parameter, but BellStyle is set to Audible, the default duration is 50 ms.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>DingTone</maml:name>
          <maml:description>
            <maml:para>If the BellStyle parameter is set to Audible, DingTone specifies the tone of the beep, in hertz (Hz). Valid values are in the range 37 to 32767 Hz. If you do not add this parameter, but Bellstyle is set to Audible, the default tone is 1221 Hz.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>EditMode</maml:name>
          <maml:description>
            <maml:para>Specifies the command line editing mode. EditMode resets any key bindings that you have set by running Set-PSReadlineKeyHandler.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Windows</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Emacs</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>EmphasisBackgroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the background color used for emphasis, such as to highlight search text.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>EmphasisForegroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the foreground color used for emphasis, such as to highlight search text.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ErrorBackgroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the background color used for errors.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ErrorForegroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the foreground color used for errors.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ExtraPromptLineCount</maml:name>
          <maml:description>
            <maml:para>Add this parameter if your prompt spans more than one line, and you want extra lines to be available when PSReadline displays the prompt after showing some output, such as when PSReadline returns a list of completions.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>HistoryNoDuplicates</maml:name>
          <maml:description>
            <maml:para>Specifies that duplicate commands should not be added to PSReadline history.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>HistorySavePath</maml:name>
          <maml:description>
            <maml:para>Specifies a path to the history file. If you do not add this parameter, the default path is ~\AppData\Roaming\PSReadline\$($host.Name)_history.txt.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>HistorySaveStyle</maml:name>
          <maml:description>
            <maml:para>Specifies how PSReadLine should save history. To avoid unexpected behavior with command history, if you do not want to use the default value, SaveIncrementally, then set this option before you run the first command line in a session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SaveIncrementally</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SaveAtExit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SaveNothing</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>HistorySearchCaseSensitive</maml:name>
          <maml:description>
            <maml:para>Specifies the searching history is case sensitive in functions such as ReverseSearchHistory or HistorySearchBackward.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>HistorySearchCursorMovesToEnd</maml:name>
          <maml:description>
            <maml:para>When you add this parameter, the cursor moves to the end of commands that you load from history by using a search. You can search the command history by typing one or more of the characters at the start of the command, and then pressing the up or down arrows, or any other keys that you have mapped to cycling through the command history. Without HistorySearchCursorMovesToEnd, the cursor remains at the position it was when you pressed the up or down arrows.</maml:para>
            <maml:para>To turn off this option, you can run either of the following commands.</maml:para>
            <maml:para>Set-PSReadlineOption –HistorySearchCursorMovesToEnd:$false</maml:para>
            <maml:para>(Get-PSReadlineOption).HistorySearchCursorMovesToEnd = $false</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
          <maml:name>InformationAction</maml:name>
          <maml:description>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SilentlyContinue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Continue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inquire</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Suspend</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
          <maml:name>InformationVariable</maml:name>
          <maml:description>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>MaximumHistoryCount</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of commands to save in PSReadline history. Note that PSReadline history not the same thing as Windows PowerShell history.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>MaximumKillRingCount</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of items stored in the kill ring.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ResetTokenColors</maml:name>
          <maml:description>
            <maml:para>Restores token colors to default settings.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ShowToolTips</maml:name>
          <maml:description>
            <maml:para>When you are displaying possible completions, adding this parameter shows tooltips in the list of completions.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>WordDelimiters</maml:name>
          <maml:description>
            <maml:para>Specifies the characters that delimit words for functions like ForwardWord or KillWord. The default value is the following list of characters:  &gt;;:,.[]{}()/\|^&amp;*-=+</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-PSReadlineOption</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>TokenKind</maml:name>
          <maml:description>
            <maml:para>Specifies the kind of token when you are setting token coloring options with the ForegroundColor and BackgroundColor parameters.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="true" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Comment</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Keyword</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Operator</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Variable</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Command</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Parameter</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Type</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Number</command:parameterValue>
            <command:parameterValue required="true" variableLength="false">Member</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>ForegroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the foreground color for the token kind that is specified by the parameter TokenKind.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies the background color for the token kind that is specified by the parameter TokenKind.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
          <maml:name>InformationAction</maml:name>
          <maml:description>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SilentlyContinue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Continue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inquire</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Suspend</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
          <maml:name>InformationVariable</maml:name>
          <maml:description>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>AddToHistoryHandler</maml:name>
        <maml:description>
          <maml:para>Specifies a ScriptBlock that can be used to control which commands get added to PSReadline history.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Func[string,bool]</command:parameterValue>
        <dev:type>
          <maml:name>Func[string,bool]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color for the token kind that is specified by the parameter TokenKind.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>BellStyle</maml:name>
        <maml:description>
          <maml:para>Specifies how PSReadLine should respond to various error conditions or user prompts. If you do not specify this parameter, the default response is Audible.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">BellStyle</command:parameterValue>
        <dev:type>
          <maml:name>BellStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>CommandValidationHandler</maml:name>
        <maml:description>
          <maml:para>Specifies a ScriptBlock that is called from ValidateAndAcceptLine. If an exception is thrown, validation fails and the error is reported. Before throwing an exception, the validation handler can place the cursor at the point of the error to make it easier to fix. A validation handler can also change the command line, such as to correct common typographical errors.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Action[CommandAst]</command:parameterValue>
        <dev:type>
          <maml:name>Action[CommandAst]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>CompletionQueryItems</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of completion items that are shown without prompting. If the number of items to show is greater than this value, PSReadline prompts you to specify yes or no (y/n) before displaying the completion items. The default maximum number is 100.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ContinuationPrompt</maml:name>
        <maml:description>
          <maml:para>Specifies the string displayed at the beginning of the second and subsequent lines when multi-line input is being entered. Defaults to '&gt;&gt;&gt;'. The empty string is valid.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ContinuationPromptBackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color of the continuation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ContinuationPromptForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color of the continuation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>DingDuration</maml:name>
        <maml:description>
          <maml:para>If the BellStyle parameter is set to Audible, DingDuration specifies the duration of the beep, in milliseconds (ms). If you do not add this parameter, but BellStyle is set to Audible, the default duration is 50 ms.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>DingTone</maml:name>
        <maml:description>
          <maml:para>If the BellStyle parameter is set to Audible, DingTone specifies the tone of the beep, in hertz (Hz). Valid values are in the range 37 to 32767 Hz. If you do not add this parameter, but Bellstyle is set to Audible, the default tone is 1221 Hz.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>EditMode</maml:name>
        <maml:description>
          <maml:para>Specifies the command line editing mode. EditMode resets any key bindings that you have set by running Set-PSReadlineKeyHandler.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">EditMode</command:parameterValue>
        <dev:type>
          <maml:name>EditMode</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>EmphasisBackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color used for emphasis, such as to highlight search text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>EmphasisForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color used for emphasis, such as to highlight search text.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ErrorBackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color used for errors.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ErrorForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color used for errors.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ExtraPromptLineCount</maml:name>
        <maml:description>
          <maml:para>Add this parameter if your prompt spans more than one line, and you want extra lines to be available when PSReadline displays the prompt after showing some output, such as when PSReadline returns a list of completions.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>ForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color for the token kind that is specified by the parameter TokenKind.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>HistoryNoDuplicates</maml:name>
        <maml:description>
          <maml:para>Specifies that duplicate commands should not be added to PSReadline history.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>HistorySavePath</maml:name>
        <maml:description>
          <maml:para>Specifies a path to the history file. If you do not add this parameter, the default path is ~\AppData\Roaming\PSReadline\$($host.Name)_history.txt.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>HistorySaveStyle</maml:name>
        <maml:description>
          <maml:para>Specifies how PSReadLine should save history. To avoid unexpected behavior with command history, if you do not want to use the default value, SaveIncrementally, then set this option before you run the first command line in a session.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">HistorySaveStyle</command:parameterValue>
        <dev:type>
          <maml:name>HistorySaveStyle</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>HistorySearchCaseSensitive</maml:name>
        <maml:description>
          <maml:para>Specifies the searching history is case sensitive in functions such as ReverseSearchHistory or HistorySearchBackward.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>HistorySearchCursorMovesToEnd</maml:name>
        <maml:description>
          <maml:para>When you add this parameter, the cursor moves to the end of commands that you load from history by using a search. You can search the command history by typing one or more of the characters at the start of the command, and then pressing the up or down arrows, or any other keys that you have mapped to cycling through the command history. Without HistorySearchCursorMovesToEnd, the cursor remains at the position it was when you pressed the up or down arrows.</maml:para>
          <maml:para>To turn off this option, you can run either of the following commands.</maml:para>
          <maml:para>Set-PSReadlineOption –HistorySearchCursorMovesToEnd:$false</maml:para>
          <maml:para>(Get-PSReadlineOption).HistorySearchCursorMovesToEnd = $false</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
        <maml:name>InformationAction</maml:name>
        <maml:description>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ActionPreference</command:parameterValue>
        <dev:type>
          <maml:name>ActionPreference</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
        <maml:name>InformationVariable</maml:name>
        <maml:description>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>MaximumHistoryCount</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of commands to save in PSReadline history. Note that PSReadline history not the same thing as Windows PowerShell history.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>MaximumKillRingCount</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of items stored in the kill ring.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ResetTokenColors</maml:name>
        <maml:description>
          <maml:para>Restores token colors to default settings.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ShowToolTips</maml:name>
        <maml:description>
          <maml:para>When you are displaying possible completions, adding this parameter shows tooltips in the list of completions.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>TokenKind</maml:name>
        <maml:description>
          <maml:para>Specifies the kind of token when you are setting token coloring options with the ForegroundColor and BackgroundColor parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TokenClassification</command:parameterValue>
        <dev:type>
          <maml:name>TokenClassification</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>WordDelimiters</maml:name>
        <maml:description>
          <maml:para>Specifies the characters that delimit words for functions like ForwardWord or KillWord. The default value is the following list of characters:  &gt;;:,.[]{}()/\|^&amp;*-=+</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>You cannot pipe objects to Set-PSReadlineOption.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>Set-PSReadlineOption does not generate output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>--------------  EXAMPLE 1  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Set-PSReadlineOption –TokenKind Comment –ForegroundColor Green –BackgroundColor Gray
</dev:code>
        <dev:remarks>
          <maml:para>This example sets tokens of the type Comment to be displayed in PSReadline in green text on a gray background.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>--------------  EXAMPLE 2  --------------</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Set-PSReadlineOption –BellStyle Audible –DingTone 1221 –DingDuration 60
</dev:code>
        <dev:remarks>
          <maml:para>This example instructs PSReadline to respond to errors and other conditions that require user input by emitting an audible beep or sound at 1221 Hz for 60 ms.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PSReadlineOption</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PSReadlineKeyHandler</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>
